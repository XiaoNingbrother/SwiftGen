//: #### Other pages
//:
//: * [Demo for `swiftgen colors`](Colors-Demo)
//: * Demo for `swiftgen fonts`
//: * [Demo for `swiftgen storyboards`](Storyboards-Demo)
//: * [Demo for `swiftgen strings`](Strings-Demo)
//: * [Demo for `swiftgen xcassets`](XCAssets-Demo)

//: #### Example of code generated by swiftgen-fonts

import UIKit.UIFont
typealias Font = UIFont

struct FontConvertible {
	let name: String
	let family: String
	let path: String
	
	func font(size: CGFloat) -> Font! {
		return Font(font: self, size: size)
	}
	
	func register() {
		let bundle = Bundle(for: BundleToken.self)
		
		guard let url = bundle.url(forResource: path, withExtension: nil) else {
			return
		}
		
		var errorRef: Unmanaged<CFError>?
		CTFontManagerRegisterFontsForURL(url as CFURL, .process, &errorRef)
	}
}

extension Font {
	convenience init!(font: FontConvertible, size: CGFloat) {
    #if os(iOS) || os(tvOS) || os(watchOS)
    if UIFont.fontNames(forFamilyName: font.family).isEmpty {
      font.register()
    }
    #elseif os(OSX)
    if NSFontManager.shared().availableMembers(ofFontFamily: font.family) == nil {
      font.register()
    }
    #endif

    self.init(name: font.name, size: size)
  }
}

struct FontFamily {
    enum Helvetica {
        static let regular = FontConvertible(name: "Helvetica", family: "Helvetica", path: "Helvetica.ttf")
        static let bold = FontConvertible(name: "Helvetica-Bold", family: "Helvetica", path: "Helvetica-Bold.ttf")
    }
    enum HelveticaNeue {
		static let regular = FontConvertible(name: "HelveticaNeue", family: "HelveticaNeue", path: "HelveticaNeue.ttf")
		static let bold = FontConvertible(name: "HelveticaNeue-Bold", family: "HelveticaNeue", path: "HelveticaNeue-Bold.ttf")
    }
}

private final class BundleToken {}

//: #### Usage Example
// Using the UIFont constructorâ€¦
let helvetica = UIFont(font: FontFamily.Helvetica.regular, size: 20.0)
// Or using the enum value and its `font` method
let helveticaNeue = FontFamily.HelveticaNeue.regular.font(size: 20.0)

let helveticaBoldBig = FontFamily.Helvetica.bold.font(size: 100.0)
let helveticaNeueBoldSmall = UIFont(font: FontFamily.HelveticaNeue.bold, size: 8.0)
