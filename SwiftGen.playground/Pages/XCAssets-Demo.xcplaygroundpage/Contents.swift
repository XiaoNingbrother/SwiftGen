//: #### Other pages
//:
//: * [Demo for `swiftgen colors`](Colors-Demo)
//: * [Demo for `swiftgen fonts`](Fonts-Demo)
//: * [Demo for `swiftgen storyboards`](Storyboards-Demo)
//: * [Demo for `swiftgen strings`](Strings-Demo)
//: * Demo for `swiftgen xcassets`

//: #### Example of code generated by swiftgen-xcassets

// Generated using SwiftGen, by O.Halligon â€” https://github.com/SwiftGen/SwiftGen

import UIKit
typealias Image = UIImage

struct AssetType: ExpressibleByStringLiteral {
	fileprivate var value: String
	
	var image: Image {
		let bundle = Bundle(for: BundleToken.self)
		#if os(iOS) || os(tvOS)
			let image = Image(named: value, in: bundle, compatibleWith: nil)
		#elseif os(OSX)
			let image = bundle.image(forResource: value)
		#elseif os(watchOS)
			let image = Image(named: value)
		#endif
		guard let result = image else { fatalError("Unable to load image \(value).") }
		return result
	}
	
	init(stringLiteral value: String) {
		self.value = value
	}
	
	init(extendedGraphemeClusterLiteral value: String) {
		self.init(stringLiteral: value)
	}
	
	init(unicodeScalarLiteral value: String) {
		self.init(stringLiteral: value)
	}
}

enum Asset {
	enum Exotic {
		static let banana: AssetType = "Exotic/Banana"
		static let mango: AssetType = "Exotic/Mango"
	}
	static let `private`: AssetType = "private"
	enum Round {
		static let apricot: AssetType = "Round/Apricot"
		static let orange: AssetType = "Round/Orange"
		enum Red {
			static let apple: AssetType = "Round/Apple"
			enum Double {
				static let cherry: AssetType = "Round/Double/Cherry"
			}
			static let tomato: AssetType = "Round/Tomato"
		}
	}
}

extension Image {
	convenience init!(asset: AssetType) {
		#if os(iOS) || os(tvOS)
			let bundle = Bundle(for: BundleToken.self)
			self.init(named: asset.value, in: bundle, compatibleWith: nil)
		#elseif os(OSX) || os(watchOS)
			self.init(named: asset.value)
		#endif
	}
}

private final class BundleToken {}

//: #### Usage Example

let image = UIImage(asset: Asset.Exotic.banana)

Asset.Round.Red.tomato.image
